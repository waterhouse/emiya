; after de-macroizing 'ssyntax-string?
arc> (time:grid:= xs (ue '(map (fn (x) (list (time-dm) (do (de-macroize x) (time-dm)) x)) (all-bound-symbols))))
 828  828 casen             
 829  831 string->sym       
 830  828 fn?               
 832  824 macex             
 828  815 in                
 820  821 is                
 816  818 some              
 817  818 -                 
 813  818 keep3             
 815  817 string-length     
 819  857 make-string       
 859  856 macro-fn          
 855  858 t                 
 856  858 flip              
 862  873 with              
 857  860 msec              
 855  851 map               
 861  857 keep2             
 866  856 num?              
 884  852 digit->char       
 862  851 eval              
 857  857 call-w/exn-handler
 858  855 drop              
 862  870 range2            
 857  866 if                
 855  855 quote             
 855  852 raise-continuable 
 854  857 exn-handler       
 875  855 keep1             
 855 1103 expand-quasiquote 
 860  885 caar              
 869  857 alref             
 854  861 err               
 853  890 atom              
 856  888 fn                
1389  888 atom?             
 852  855 all-bound-symbols 
 886  850 cadr              
 856  852 make-closure      
 856  850 nflip             
 853  853 save-value        
 849  854 test              
 852  860 closure-body      
 850  844 keep              
 845  833 xloop             
 836  833 *                 
 837  832 closure-args      
 834  835 mod               
 833  837 string?           
 834  835 prn               
 834  834 rfn               
 856  831 closure-env       
 835  832 gc                
 835  810 ssyntax?          
 810  806 flat              
 799  805 unsafe-macro-fn   
 803  804 accumulate2       
 805  809 cons?             
 812  806 take              
 810  806 macro?            
 802  808 range             
 805  809 no                
 802  807 make-mac          
 810  805 expand-qq         
 838  719 decimal-digits    
 730  717 ssyntax-string?   
 717  718 cdar              
 716  737 uniq-count        
 719  711 list*             
 714  708 char->int         
 711  713 cdr               
 707  892 symbol-set        
 723  716 w/uniq            
 722  715 uniq              
 718  719 char              
 719  720 again             
 719  717 mem-f             
 722  720 range4            
 720  869 closure?          
 736  720 >                 
 720  726 <                 
 758  731 /                 
 727  737 +                 
 719  726 qq-narb           
 720  717 accumulate        
 721  721 int->char         
 717  722 dlet              
 715  709 bound?            
 711  710 ccc               
 714  716 quasiquote        
 714  718 case              
 713  708 acons             
 711  645 do                
 647  652 mac               
 650  652 withs             
 651  653 arc-eval          
 653  657 isnt              
 649  651 de-macroize       
 660  656 chars->sym        
 656  670 cddr              
 646  646 string-set        
 657  647 sym?              
 652  664 append            
 655  648 list              
 662  648 car               
 647  653 newstring         
 647  647 prsn              
 655  648 expand-closure    
 661  680 idfn              
 658  660 rev               
 665  648 let               
 647  650 time-dm           
 649  493 chars->string     
 503  486 symbol-value      
 484  488 accumulate1       
 516  489 def               
 485  489 old-values        
 512  490 range3            
 489  488 append2           
 490  154 de-macro          
 151  153 apply             
 152  156 get-with-arglist  
 151  153 scdr              
 155  152 mem               
 153  152 find-string       
 152  152 bracket-fn        
 153  152 casenlet          
 152  152 no?               
 152  153 arglist-argnames  
 154  155 map1              
 153  153 nrev              
 152  155 iso               
 153  152 scar              
 152  152 range1            
 152  153 sym->string       
 154  174 all               
 155  153 raise             
 151  155 expand-macro      
 152  151 assign            
 154  154 bound             
 151  153 make-dyn          
 153  151 testify           
 155  152 eight             
 152  152 keep4             
 152  153 div               
 152  153 len               
 151  152 expand-qq-rest    
 155  153 and               
 155  151 or                
 153  153 tuples            
 153  153 cons              
 153  152 inc               
 153  152 ssexpand          
 153  153 macex1            
time: 199094 cpu: 197271 gc: 2540 mem: 12019848
